
Load routine that updates position based both on X and Y velocity
$81/BC7C 22 3E 82 82 JSL $82823E[$82:823E]   A:0120 X:0006 Y:0027 P:envMXdizc
22 0A 82 82 -> Linear *USED*
22 E8 81 82? --> Utilizes gravity

Now, the bouncing shot has a glitch. After it hits the floor, it does the little bounce, then goes upwards.
--> Remove the last state so that it always bounces, then change the velocity value after the bounce


Change Linear vs bounce pattern:
$81/BC37 29 0F       AND #$0F                A:FD3D X:0035 Y:0002 P:envMXdizc
$81/BC39 C9 0D       CMP #$0D                A:FD0D X:0035 Y:0002 P:envMXdizc -> Change to alter the pattern of direction 1 and 2
$81/BC3B B0 05       BCS $05    [$BC42]      A:FD0D X:0035 Y:0002 P:envMXdizC -> Remove or BRA to force one direction or the other
$81/BC42 C2 20       REP #$20 
BC39: C9 09

Change behaviour of bounce ice block:
$81/BC6E E6 01       INC $01    [$00:1469]   A:0104 X:0068 Y:00BE P:envMXdizc
$81/BC70 E6 01       INC $01    [$00:1469]   A:0104 X:0068 Y:00BE P:envMXdizc
-->
A9 04
85 01
Always bounces


After second bounce, loads Y velocity:
$81/BC68 A5 2B       LDA $2B    [$00:1493]   A:0101 X:0068 Y:00BE P:envMXdizc
$81/BC6A 29 04       AND #$04                A:0104 X:0068 Y:00BE P:envMXdizc
$81/BC6C F0 0D       BEQ $0D    [$BC7B]      A:0104 X:0068 Y:00BE P:envMXdizc
$81/BC6E A9 06       LDA #$06                A:0104 X:0068 Y:00BE P:envMXdizc
$81/BC70 85 01       STA $01    [$00:1469]   A:0106 X:0068 Y:00BE P:envMXdizc
$81/BC72 C2 20       REP #$20                A:0106 X:0068 Y:00BE P:envMXdizc
$81/BC74 A9 8B 01    LDA #$018B              A:0106 X:0068 Y:00BE P:envmXdizc
$81/BC77 85 1C       STA $1C    [$00:1484]   A:018B X:0068 Y:00BE P:envmXdizc
$81/BC79 E2 20       SEP #$20                A:018B X:0068 Y:00BE P:envmXdizc
$81/BC7B 60          RTS      


_______________________________________________

Linear shot:

Opcodes that set the flag that determines if the shot will go left or right:
$81/BC16 A5 11       LDA $11    [$00:1439]   A:0102 X:0000 Y:0027 P:envMXdizc
$81/BC18 0A          ASL A                   A:016B X:0000 Y:0027 P:envMXdizc
$81/BC19 0A          ASL A                   A:01D6 X:0000 Y:0027 P:eNvMXdizc
$81/BC1A C2 20       REP #$20                A:01AC X:0000 Y:0027 P:eNvMXdizC

Routine that loads velocities:
$81/BC1C A9 00 04    LDA #$0400              A:01AC X:0000 Y:0027 P:eNvmXdizc
$81/BC1F B0 03       BCS $03    [$BC24]      A:0400 X:0000 Y:0027 P:envmXdizc
$81/BC21 A9 00 FC    LDA #$FC00              A:0400 X:0000 Y:0027 P:envmXdizc
$81/BC24 85 1A       STA $1A    [$00:1442]   A:FC00 X:0000 Y:0027 P:eNvmXdizc	Store X-Velocity of ice block
BC1C:
22 50 F1 84 EA EA EA EA

Direction 1 - Linear:
YDif = $21 (2 bytes) [$7E:0E99]

27150:

08					PHP							Push processor status register

AD B0 0B			LDA $0BB0	[$00:0BB0]		Load X's Y-position
18					CLC							Clear carry flag
ED 70 0E			SBC $0E70	[$00:0E70]		Subtract Chill Penguin's Y-position | WILL BREAK IF CHILL PENGUIN IS NOT THE FIRST ENEMY IN ENEMY DATA
8D 99 0E			STA $0E99	[$00:0E99]		Store Y-Dif 						|

0A					ASL							AccX2				| Y-Dif x10
0A					ASL							AccX2				|
18					CLC							Clear carry flag	|
6D 99 0E			ADC $0E99					Add Y-Dif 			|
0A					ASL							AccX2				|

49 FF FF			EOR #$FFFF					Invert value of Acc
18					CLC							Clear carry flag
69 01 00			ADC #$0001					Add #$0001
85 1C				STA $1C						Store Y-Velocity of ice block

AD 99 0E			LDA $0E99					Load Y-Dif
0A					ASL 						AccX2
49 FF FF			EOR #$FFFF					Invert value of Acc
18					CLC							Clear carry flag
69 01 04			ADC #$0401					Add #$0481

28					PLP							Pull processor status register
08					PHP							Push processor status register

B0 03				BCS $07						Branch if shot going right
49 FF FF			EOR #$FFFF					Invert value of Acc
18					CLC							Clear carry flag
69 01 00			ADC #$0001					Add #$0001

28					PLP							Pull processor status register
6B					RTL


_______________________________________________

Arc shot:

$81/BC37 29 0F       AND #$0F                A:F41A X:0035 Y:0002 P:envMXdizc
$81/BC39 C9 0A       CMP #$0A                A:F40A X:0035 Y:0002 P:envMXdizc
$81/BC3B B0 05       BCS $05    [$BC42]      A:F40A X:0035 Y:0002 P:envMXdiZC
$81/BC42 C2 20       REP #$20                A:F40A X:0035 Y:0002 P:envMXdiZC
$81/BC44 A9 21 02    LDA #$0221              A:F40A X:0035 Y:0002 P:envmXdiZC	A9 00 FE
$81/BC47 85 1C       STA $1C    [$00:1484]   A:0221 X:0035 Y:0002 P:envmXdizC	
$81/BC49 A9 00 02    LDA #$0200              A:0221 X:0035 Y:0002 P:envmXdizC	A9 C0 01
$81/BC4C A6 1B       LDX $1B    [$00:1483]   A:0200 X:0035 Y:0002 P:envmXdizC
$81/BC4E 10 03       BPL $03    [$BC53]      A:0200 X:00FB Y:0002 P:eNvmXdizC	Branch if shotting right
$81/BC50 A9 00 FE    LDA #$FE00              A:0200 X:00FB Y:0002 P:eNvmXdizC	A9 40 FE
$81/BC53 85 1A       STA $1A    [$00:1482]   A:FE00 X:00FB Y:0002 P:eNvmXdizC	46 1A


After bounce:
$81/BC74 A9 8B 01    LDA #$018B              A:0104 X:0068 Y:00BE P:envmXdizc	A9 00 06
$81/BC77 85 1C       STA $1C    [$00:1484]   A:018B X:0068 Y:00BE P:envmXdizc


_______________________________________________

Number of iceblocks:
$81/B714 A9 04       LDA #$04                A:D080 X:0035 Y:0002 P:envMXdizc	A9 0C
$81/B716 85 36       STA $36    [$00:0E9E]   A:D004 X:0035 Y:0002 P:envMXdizc


Skeleton:

AF:CFE0 = Base of the animations

AFCFE2: 48 00 -> C0 19 Change this, spitting attack skeleton pointer
AND move the skeleton to empty space: AFE9A0


Original skeleton (AFD028):
0B 00 00
0B 00 02
0B 00 04
0B 00 05
05 01 07
06 80 06
EE FF

New Skeleton (AFE9A0):
04 00 00
04 00 02
04 00 04
0B 00 05
0B 01 07
0B 01 06
0B 00 04
0B 00 05
0B 01 07
0B 01 06
04 00 02
08 00 04
14 00 05
0A 01 07
0A 01 06
0A 01 06
0A 01 06
0B 80 02
EE FF

BC39

AA BB CC
AA = Countdown
BB = Action
CC = Sprite